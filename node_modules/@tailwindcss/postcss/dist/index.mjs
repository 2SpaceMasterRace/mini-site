import{compile as z}from"@tailwindcss/node";import{clearRequireCache as W}from"@tailwindcss/node/require-cache";import{Scanner as O}from"@tailwindcss/oxide";import M from"fs";import h from"node:path";function S(e,r){if(typeof e!="string")throw new TypeError("expected path to be a string");if(e==="\\"||e==="/")return"/";var t=e.length;if(t<=1)return e;var o="";if(t>4&&e[3]==="\\"){var p=e[2];(p==="?"||p===".")&&e.slice(0,2)==="\\\\"&&(e=e.slice(2),o="//")}var s=e.split(/[/\\]+/);return r!==!1&&s[s.length-1]===""&&s.pop(),o+s.join("/")}function T(e){let r=S(e);return e.startsWith("\\\\")&&r.startsWith("/")&&!r.startsWith("//")?`/${r}`:r}var w="'",v='"';function A(){let e=new WeakSet;function r(t){let o=t.root().source?.input.file;if(!o)return;let p=t.source?.input.file;if(!p||e.has(t))return;let s=t.params[0],c=s[0]===v&&s[s.length-1]===v?v:s[0]===w&&s[s.length-1]===w?w:null;if(!c)return;let n=t.params.slice(1,-1),u="";if(n.startsWith("!")&&(n=n.slice(1),u="!"),!n.startsWith("./")&&!n.startsWith("../"))return;let i=h.posix.join(T(h.dirname(p)),n),m=h.posix.dirname(T(o)),f=h.posix.relative(m,i);f.startsWith(".")||(f="./"+f),t.params=c+u+f+c,e.add(t)}return{postcssPlugin:"tailwindcss-postcss-fix-relative-paths",AtRule:{source:r,plugin:r,config:r}}}import{Features as C,transform as V}from"lightningcss";import y from"path";import E from"postcss";import j from"postcss-import";var x=class extends Map{constructor(t){super();this.factory=t}get(t){let o=super.get(t);return o===void 0&&(o=this.factory(t,this),this.set(t,o)),o}};function N(e={}){let r=e.base??process.cwd(),t=e.optimize??process.env.NODE_ENV==="production",o=new x(()=>({mtimes:new Map,compiler:null,css:"",optimizedCss:"",fullRebuildPaths:[]})),p,s;return{postcssPlugin:"@tailwindcss/postcss",plugins:[j(),A(),{postcssPlugin:"tailwindcss",Once(){p=!1,s=!1},AtRule(c){c.name==="apply"?p=!0:c.name==="tailwind"&&(p=!0,s=!0)},async OnceExit(c,{result:n}){let u=n.opts.from??"",i=o.get(u),m=y.dirname(y.resolve(u));async function f(){return W(i.fullRebuildPaths),i.fullRebuildPaths=[],z(c.toString(),{base:m,onDependency:a=>{i.fullRebuildPaths.push(a)}})}i.compiler??=await f();let g="incremental";{for(let l of i.fullRebuildPaths)n.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:l,parent:n.opts.from});let a=n.messages.flatMap(l=>l.type!=="dependency"?[]:l.file);a.push(u);for(let l of a){let P=M.statSync(l,{throwIfNoEntry:!1})?.mtimeMs??null;if(P===null){l===u&&(g="full");continue}i.mtimes.get(l)!==P&&(g="full",i.mtimes.set(l,P))}}if(!s&&!p)return;let d="",b=new O({detectSources:{base:r},sources:i.compiler.globs.map(({origin:a,pattern:l})=>({base:a?y.dirname(y.resolve(m,a)):m,pattern:l}))}),R=b.scan();for(let a of b.files)n.messages.push({type:"dependency",plugin:"@tailwindcss/postcss",file:a,parent:n.opts.from});for(let{base:a,pattern:l}of b.globs)n.messages.push({type:"dir-dependency",plugin:"@tailwindcss/postcss",dir:a,glob:l,parent:n.opts.from});g==="full"?(i.compiler=await f(),d=i.compiler.build(s?R:[])):g==="incremental"&&(d=i.compiler.build(R)),d!==i.css&&t&&(i.optimizedCss=B(d,{minify:typeof t=="object"?t.minify:!0})),i.css=d,c.removeAll(),c.append(E.parse(t?i.optimizedCss:i.css,n.opts))}}]}}function B(e,{file:r="input.css",minify:t=!1}={}){return V({filename:r,code:Buffer.from(e),minify:t,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:C.Nesting,exclude:C.LogicalProperties,targets:{safari:16<<16|1024},errorRecovery:!0}).code.toString()}var U=Object.assign(N,{postcss:!0});export{U as default};
